<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
       ">
        
	<!-- where to find your controller class -->
	<context:component-scan base-package="com.qfedu.house">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.context.annotation.Configuration" />
	</context:component-scan>
	<context:annotation-config />

	<bean id="propertyConfigurer" class="com.qfedu.house.util.MyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp2.BasicDataSource" p:username="${username}"
		p:password="${password}" p:url="${url}" p:driverClassName="${driver}" />

	<!-- data source (database connection pool) -->
	<!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
		init-method="init" destroy-method="close"> <property name="url" value="${url}" 
		/> <property name="username" value="${username}" /> <property name="password" 
		value="${password}" /> <property name="initialSize" value="10" /> <property 
		name="minIdle" value="10" /> <property name="maxActive" value="50" /> <property 
		name="maxWait" value="15000" /> <property name="timeBetweenEvictionRunsMillis" 
		value="60000" /> <property name="minEvictableIdleTimeMillis" value="300000" 
		/> <property name="validationQuery" value="SELECT 'x'" /> <property name="testWhileIdle" 
		value="true" /> <property name="testOnBorrow" value="false" /> <property 
		name="testOnReturn" value="false" /> <property name="poolPreparedStatements" 
		value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
		value="20" /> <property name="filters" value="stat" /> </bean> -->

	<!-- BEA Weblogic / IBM Websphere -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="jdbc/house"/> -->

	<!-- SessionFactory for Hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.qfedu.house.domain" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
				hibernate.show_sql=true
				hibernate.format_sql=true
			</value>
		</property>
	</bean>

	<!-- SqlSessionFactory for MyBatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- Where to find MyBatis mappers -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.qfedu.house.mapper" />
	</bean>

	<!-- Transaction Manager for Hibernate -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Annotation based transaction management -->
	<tx:annotation-driven />

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="5000" />
		<property name="maxIdle" value="500" />
		<property name="maxWaitMillis" value="5000" />
	</bean>

	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="121.201.63.53" />
		<property name="port" value="6379" />
		<property name="password" value="1qaz2wsx" />
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="usePool" value="true" />
	</bean>

	<bean class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>

</beans>